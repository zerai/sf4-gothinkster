<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Identity\Domain\Model\User\Event;

final class FakeWasRegister extends \Prooph\Common\Messaging\DomainEvent
{
    use \Prooph\Common\Messaging\PayloadTrait;

    public const MESSAGE_NAME = 'Identity\Domain\Model\User\Event\FakeWasRegister';

    protected $messageName = self::MESSAGE_NAME;

    private $firstName;
    private $email;

    public function firstName(): string
    {
        if (null === $this->firstName) {
            $this->firstName = $this->payload['firstName'];
        }

        return $this->firstName;
    }

    public function email(): string
    {
        if (null === $this->email) {
            $this->email = $this->payload['email'];
        }

        return $this->email;
    }

    public static function with(string $firstName, string $email): FakeWasRegister
    {
        return new self([
            'firstName' => $firstName,
            'email' => $email,
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['firstName']) || !\is_string($payload['firstName'])) {
            throw new \InvalidArgumentException("Key 'firstName' is missing in payload or is not a string");
        }

        if (!isset($payload['email']) || !\is_string($payload['email'])) {
            throw new \InvalidArgumentException("Key 'email' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
